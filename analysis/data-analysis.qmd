---
title: "OLS"
format: html
editor: visual
---

```{r}
library(here)
library(tidyverse)
library(mgcv)
library(stargazer)
library(sf)
library(colorspace)
library("scales")

df_raw = read_csv(here("data", "NO2_ZEV_ZCTAs.csv"))
df = df_raw %>% select(-ZCTA, -n2_2019)

```

## Table 1: Summary Statistics

Create a LaTeX version of the data frame:

```{r}
tbl = stargazer(as.data.frame(df), nobs = F,
                covariate.labels=c("Change in NO2, 2013-2019 (ppb)",
                                   "\\% ZEV, 2019",
                                   "\\% ZEV, 2013",
                                   "Population",
                                   "Median age",
                                   "\\% College educated",
                                   "\\% High school educated",
                                   "\\% White",
                                   "Median income",
                                   "\\% in poverty",
                                   "\\% of homes owner-occupied",
                                   "Median home value",
                                   "\\% Take automobile to work",
                                   "\\% Take public transit to work",
                                   "\\% Work from home",
                                   "Industrial employment density",
                                   "Road density",
                                   "Transit frequency (peak)",
                                   "Walkability index"
                ), digits = 1)
```

## Figure 1: Map of Treatment and Outcome

```{r}
# Read in shape data
df_shp = st_read(here("data", "NO2_ZEV_ZCTAs.shp"))
```

### NO2

```{r}
p = ggplot(df_shp) + geom_sf(aes(geometry=geometry, fill = no2), color = NA) + 
  theme(axis.line=element_blank(), 
        axis.text.x=element_blank(), axis.title.x=element_blank(),
        axis.text.y=element_blank(), axis.title.y=element_blank(),
        axis.ticks=element_blank(), 
        panel.background = element_blank()) + 
  scale_fill_gradientn(
      name = "Change in NO2, \n2013-2019 (ppb)",
      colors=c("darkblue","#f5f5f5","darkred"),
      values=rescale(c(-3.1,0,1.1)),
      limits=c(-3.1,1.1), oob = scales::squish
    )
ggsave(here("results", "CA-NO2.png"), plot = p, width = 5, height = 5, units = "in", dpi = 300)
p

```

### ZEV

```{r}

p = ggplot(df_shp) + geom_sf(aes(geometry=geometry, fill = ZEV_2019), color = NA) + 
  theme(axis.line=element_blank(), 
        axis.text.x=element_blank(), axis.title.x=element_blank(),
        axis.text.y=element_blank(), axis.title.y=element_blank(),
        axis.ticks=element_blank(), 
        panel.background = element_blank()) + 
  scale_fill_gradientn(
    name = "% of ZEV, 2019",
    colors=c("#f5f5f5","limegreen", "darkgreen"),
    values=rescale(c(0,5,21)),
    limits=c(0,21), oob = scales::squish, 
  )

ggsave(here("results", "CA-ZEV.png"), plot = p, width = 5, height = 5, units = "in", dpi = 300)
p
```

## Figure 2: Full Confounder Comparison

Additive Shift
```{r}
theme_set(theme_light(base_size = 14))

estimate_df = read_csv(here("results", "mtp_analysis_a.csv"))
estimate_df$method = factor(estimate_df$method, c("Induced MTP (Trimmed)", "Induced MTP (Sum)", "MTP (No Interference)",  "GLM (No Interference)"))
group.colors <- c("GLM (No Interference)" = "#7BA573", "MTP (No Interference)" = "#7BA573", 
                  "Induced MTP (Sum)" = "#000332", 
                  "Induced MTP (Trimmed)" = "#6B82B9")


p = ggplot(estimate_df) + 
  geom_vline(xintercept = 0, color = "darkgray") +
  geom_errorbarh(aes(y = method, xmin = lower, xmax = upper, color = method), 
                 height = .4, linewidth = 0.8) + 
  geom_point(aes(x = effects, y = method, color = method), size = 2.5) +
  theme_minimal() + 
  theme(axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)),
        legend.position = "none", 
        plot.margin = margin(, 2, , , "cm")
) +
  ylab("") + xlab("Change in NO2 (ppb)") +
  scale_color_manual(values=group.colors) 

p
ggsave(here("results", "data-MTP-comparison-a.png"), width = 6, height = 4)

```

Multiplicative Shift
```{r}
estimate_df = read_csv(here("results", "mtp_analysis_m.csv"))
estimate_df$method = factor(estimate_df$method, c("Induced MTP (Trimmed)", "Induced MTP (Sum)", "MTP (No Interference)",  "GLM (No Interference)"))

p = ggplot(estimate_df) + 
  geom_vline(xintercept = 0, color = "darkgray") +
  geom_errorbarh(aes(y = method, xmin = lower, xmax = upper, color = method), 
                 height = .4, linewidth = 0.8) + 
  geom_point(aes(x = effects, y = method, color = method), size = 2.5) +
  theme_minimal() + 
  theme(axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)),
        legend.position = "none", 
        plot.margin = margin(, 2, , , "cm")
) +
  ylab("") + xlab("Change in NO2 (ppb)") +
  scale_color_manual(values=group.colors) 

p
ggsave(here("results", "data-MTP-comparison-m.png"), width = 6, height = 4)

```


## Figure 3: MTP Grid

```{r}
grid_df_a = read_csv(here("results", "mtp_grid_a.csv"))
grid_df_a$shifttype = "Additive Shift"
grid_df_m = read_csv(here("results", "mtp_grid_m.csv"))
grid_df_m$shifttype = "Multiplicative Shift"

grid_df = rbind(grid_df_a, grid_df_m)
grid_df = grid_df[grid_df$shift > 0,]
grid_df[,3:5] = abs(grid_df[,3:5])

group.colors <- c("MTP (No Interference)" = "#7BA573", 
                  "Induced MTP (Sum)" = "#000332", 
                  "Induced MTP (Trimmed)" = "#6B82B9")

p = ggplot(grid_df) + 
  geom_errorbar(aes(x = shift, ymin = lower, ymax = upper, color = name), 
                 width = 0, linewidth = 0.6) + 
  geom_line(aes(x = shift, y = est, color = name), size = 0.6) +
  theme_minimal() + 
  labs(x = "Increase in Proportion of ZEVs Across CA (Percentage Point)", 
       y = "Change in NO2 (ppb)",
       color="Estimator") + 
  theme(legend.position = "bottom", axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)), plot.margin = margin(, 2, , , "cm")) + 
  facet_wrap(vars(shifttype), ncol = 2, scales = "free") + 
  scale_color_manual(values=group.colors) 


p

ggsave(here("results", "data-MTP-grid.png"), width = 6, height = 4)


```


