---
title: "OLS"
format: html
editor: visual
---

```{r}
library(here)
library(tidyverse)
library(mgcv)
library(stargazer)
library(sf)
library(colorspace)
library("scales")

df_raw = read_csv(here("data", "NO2_ZEV_ZCTAs.csv"))
df = df_raw %>% select(-ZCTA, -n2_2019, -p__2013)

```

## Table 1: Summary Statistics

Create a LaTeX version of the data frame:

```{r}
tbl = stargazer(as.data.frame(df), nobs = F,
                covariate.labels=c("Change in NO2, 2013-2019 (ppb)",
                                   "\\% ZEV, 2019",
                                   "\\% ZEV, 2013",
                                   "Population",
                                   "Median age",
                                   "\\% College educated",
                                   "\\% High school educated",
                                   "\\% White",
                                   "Median income",
                                   "\\% in poverty",
                                   "\\% of homes owner-occupied",
                                   "Median home value",
                                   "\\% Take automobile to work",
                                   "\\% Take public transit to work",
                                   "\\% Work from home",
                                   "Industrial employment density",
                                   "Road density",
                                   "Transit frequency (peak)",
                                   "Walkability index"
                ), digits = 1)
```

## Figure 1: Map of Treatment and Outcome

```{r}
# Read in shape data
df_shp = st_read(here("data", "NO2_ZEV_ZCTAs.shp"))
```

### NO2

```{r}
p = ggplot(df_shp) + geom_sf(aes(geometry=geometry, fill = no2), color = NA) + 
  theme(axis.line=element_blank(), 
        axis.text.x=element_blank(), axis.title.x=element_blank(),
        axis.text.y=element_blank(), axis.title.y=element_blank(),
        axis.ticks=element_blank(), 
        panel.background = element_blank()) + 
  scale_fill_gradientn(
      name = "Change in NO2, \n2013-2019 (ppb)",
      colors=c("darkblue","#f5f5f5","darkred"),
      values=rescale(c(-3.1,0,1.1)),
      limits=c(-3.1,1.1), oob = scales::squish
    )
ggsave(here("results", "CA-NO2.png"), plot = p, width = 5, height = 5, units = "in", dpi = 300)
p

```

### ZEV

```{r}

p = ggplot(df_shp) + geom_sf(aes(geometry=geometry, fill = ZEV_2019), color = NA) + 
  theme(axis.line=element_blank(), 
        axis.text.x=element_blank(), axis.title.x=element_blank(),
        axis.text.y=element_blank(), axis.title.y=element_blank(),
        axis.ticks=element_blank(), 
        panel.background = element_blank()) + 
  scale_fill_gradientn(
    name = "% of ZEV, 2019",
    colors=c("#f5f5f5","limegreen", "darkgreen"),
    values=rescale(c(0,5,21)),
    limits=c(0,21), oob = scales::squish, 
  )

ggsave(here("results", "CA-ZEV.png"), plot = p, width = 5, height = 5, units = "in", dpi = 300)
p
```

## Figure 2: Full Confounder Comparison

Additive Shift

```{r}
theme_set(theme_light(base_size = 14))

labels = c("Induced MTP (Sum)", "MTP (No Interference)",  "GLM (No Interference)")
estimate_df = read_csv(here("results", "mtp_analysis_a.csv"))
estimate_df$method = factor(estimate_df$method, labels)
group.colors <- c("GLM (No Interference)" = "#7BA573", "MTP (No Interference)" = "#7BA573", 
                  "Induced MTP (Sum)" = "#000332")


p = ggplot(estimate_df) + 
  geom_vline(xintercept = 0, color = "darkgray") +
  geom_errorbarh(aes(y = method, xmin = lower, xmax = upper, color = method), 
                 height = .4, linewidth = 0.8) + 
  geom_point(aes(x = effects, y = method, color = method), size = 2.5) +
  theme_minimal() + 
  theme(axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)),
        legend.position = "none", 
        plot.margin = margin(, 2, , , "cm")
) +
  ylab("") + xlab("Change in NO2 (ppb)") +
  scale_color_manual(values=group.colors) 

p
ggsave(here("results", "data-MTP-comparison-a.png"), width = 6, height = 4)

```

Multiplicative Shift

```{r}
estimate_df = read_csv(here("results", "mtp_analysis_m.csv"))
estimate_df$method = factor(estimate_df$method, labels)

p = ggplot(estimate_df) + 
  geom_vline(xintercept = 0, color = "darkgray") +
  geom_errorbarh(aes(y = method, xmin = lower, xmax = upper, color = method), 
                 height = .4, linewidth = 0.8) + 
  geom_point(aes(x = effects, y = method, color = method), size = 2.5) +
  theme_minimal() + 
  theme(axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)),
        legend.position = "none", 
        plot.margin = margin(, 2, , , "cm")
) +
  ylab("") + xlab("Change in NO2 (ppb)") +
  scale_color_manual(values=group.colors) 

p
ggsave(here("results", "data-MTP-comparison-m.png"), width = 6, height = 4)

```

## Figure 3: MTP Grid

Network variance

```{r}
grid_df_a = read_csv(here("results", "mtp_grid_a.csv"))
grid_df_a$shifttype = "Additive Shift"

grid_df_m = read_csv(here("results", "mtp_grid_m.csv"))
grid_df_m$shifttype = "Multiplicative Shift"

# First, compute the ratio needed to Bonferroni-correct the existing CIs
original_tstat = 1.96

## additive
num_tests_a = length(unique(grid_df_a$shift))
new_tstat_a = qnorm(1 - (0.025 / num_tests_a))
new_tstat_a
ratio_a = new_tstat_a / original_tstat

grid_df_a$lower = grid_df_a$est - ((grid_df_a$est - grid_df_a$lower) * ratio_a)
grid_df_a$upper = grid_df_a$est + ((grid_df_a$upper - grid_df_a$est) * ratio_a)

## multiplicative
num_tests_m = length(unique(grid_df_m$shift))
new_tstat_m = qnorm(1 - (0.025 / num_tests_m))
ratio_m = new_tstat_m / original_tstat

grid_df_m$lower = grid_df_m$est - ((grid_df_m$est - grid_df_m$lower) * ratio_a)
grid_df_m$upper = grid_df_m$est + ((grid_df_m$upper - grid_df_m$est) * ratio_a)

grid_df = rbind(grid_df_a, grid_df_m)
grid_df = grid_df[grid_df$shift > 0,]
grid_df[,3:5] = abs(grid_df[,3:5])


group.colors <- c("MTP (No Interference)" = "#7BA573", 
                  "Induced MTP (Sum)" = "#000332")
                  
```

```{r}
labels = unique(grid_df$name)[c(2, 1, 3)]
grid_df$name  = factor(grid_df$name, levels = labels)


p = ggplot(grid_df, aes(x = shift, y = est)) + 
  geom_ribbon(aes(ymin = lower, ymax = upper, fill = name), 
                 width = 0, linewidth = 0.6, alpha = 0.3) + 
  geom_line(aes(color = name), size = 0.6) +
  theme_minimal() + 
  labs(x = "Increase in Proportion of ZEVs Across CA (Percentage Point)", 
       y = "Change in NO2 (ppb)",
       color="Estimator") + 
  theme(legend.position = "bottom", axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)), plot.margin = margin(, 2, , , "cm")) + 
  facet_wrap(vars(shifttype), ncol = 2, scales = "free") + 
  scale_color_manual(name = "", labels = labels, values=group.colors) + 
  scale_fill_manual(name = "", labels = labels, values=group.colors)


p
here("results", "data-MTP-grid.png")
ggsave(here("results", "data-MTP-grid2.png"), width = 6, height = 4)
```
