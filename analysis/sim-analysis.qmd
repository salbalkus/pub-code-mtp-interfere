---
title: "Supplementary Synthetic Data Results for The Causal Effects of Modified Treatment Policies Under Network Interference"
format: html
---

This Quarto notebook produces a publication-ready plot for the synthetic data supplement section of Balkus, Delaney, and Hejazi (2025) "The Causal Effects of Modified Treatment Policies Under Network Interference". These plots compare the results of using estimators that ignore interference to our method, which uses the network-TMLE. See the top-level `simulations` folder for the actual code to produce results.

First, we load the necessary packages.

```{r}
library(here)
library(tidyverse)
library(stargazer)

```

## Load synthetic data simulation results

```{r}
network_names = c("er-super-fast", "sf-super-fast", "ws-super-fast")
network_names_full = c(`er-super-fast` = "Erdős-Rényi", `sf-super-fast` = "Scale-Free", `ws-super-fast` = "Watts-Strogatz")

here("data", paste0("summary-synthetic-3-stepwise.jl-", network_names[1], ".csv"))

read_simulation_result <- function(x){
  df = read_csv(here("data", paste0("summary-synthetic-3-stepwise-trunc.jl-", x, ".csv")))
  df$network = x
  return(df)
}

df = bind_rows(lapply(network_names, read_simulation_result))
df

```
```{r}
labels = c("`% Bias`", "`√Cₙ·|Bias|`", "`Cₙ·MSE`", "`Coverage`")

truthdf = data.frame(name=as.factor(c("`% Bias`", "`√Cₙ·|Bias|`", "`Cₙ·MSE`", "`Coverage`")), value=c(0,0,0,0.95))

truthdf = cbind(rbind(truthdf, truthdf, truthdf), data.frame(network = as.factor(c(rep("Erdős-Rényi", 4), rep("Scale-Free", 4), rep("Watts-Strogatz", 4)))))

```

```{r}

df2 = df %>% 
  pivot_longer(all_of(c("pct_bias", "scaled_bias", "scaled_mse", "coverage"))) %>% 
  select(samples, method, name, value, network) %>%
  filter(method %in% c("tmle", "tmle_iid", "ols"))

df2$name = factor(df2$name, 
                  c("pct_bias", "scaled_bias", "scaled_mse", "coverage"), 
                  labels = labels)

df2$network = factor(df2$network,
                    network_names,
                    labels = network_names_full)

df2$method = factor(df2$method,
                    c("tmle", "tmle_iid", "ols"),
                    labels = c(tmle = "Network-TMLE", tmle_iid = "TMLE (No Network)", ols = "Linear Regression (No Network)"))


```

## Create plots of synthetic data simulation results

```{r}

theme_set(theme_light(base_size = 10))

p1 = ggplot(df2) + 
  geom_hline(aes(yintercept = value), color = "gray", data=truthdf) + 
  geom_line(aes(x = samples, y = value, color = method), linewidth = 0.5) +
  geom_point(aes(x = samples, y = value, color = method)) +
  facet_grid(rows = vars(name), cols = vars(network), labeller=label_parsed, scales = "free_y") + 
  ylab("") + xlab("Sample Size") + labs(color = "") +
  scale_color_manual(values = c("#002e5c", "#ffa600", "#00aaf5")) + 
  theme(strip.background = element_rect("#EEEEEE", "#d1d1d1"), 
        strip.text = element_text(colour = 'black'), 
        legend.position = "bottom",legend.title=element_blank(), 
        legend.margin=margin(-10,0,0,0),
        panel.spacing = unit(15, "pt")) +
  scale_x_continuous(breaks = c(100, 400, 900, 1600))

ggsave("sim-result-comparison.png", p1, path = here("results"), width = 6, height = 6, dpi = 1000)

p1

```
