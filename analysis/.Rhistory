theme(strip.background = element_rect("#EEEEEE", "#d1d1d1"),
strip.text = element_text(colour = 'black'),
legend.position = "bottom",legend.title=element_blank(),
legend.margin=margin(-10,0,0,0),
panel.spacing = unit(15, "pt")) +
scale_x_continuous(breaks = c(400, 900, 1600, 2500))
ggsave("sim-result.png", p1, path = here("results"), width = 6, height = 6)
theme_set(theme_light(base_size = 10))
p1 = ggplot(df2) +
geom_hline(aes(yintercept = value), color = "gray", data = truthdf) +
geom_line(aes(x = samples, y = value, color = method), linewidth = 0.5) +
geom_point(aes(x = samples, y = value, color = method)) +
facet_grid(rows = vars(name), cols = vars(network), labeller=label_parsed, scales = "free_y") +
ylab("") + xlab("Sample Size") + labs(color = "") +
scale_color_manual(values = c("#002e5c", "#ffa600", "#00aaf5")) +
theme(strip.background = element_rect("#EEEEEE", "#d1d1d1"),
strip.text = element_text(colour = 'black'),
legend.position = "bottom",legend.title=element_blank(),
legend.margin=margin(-10,0,0,0),
panel.spacing = unit(15, "pt")) +
scale_x_continuous(breaks = c(400, 900, 1600, 2500))
ggsave("sim-result.png", p1, path = here("results"), width = 6, height = 6)
theme_set(theme_light(base_size = 10))
p1 = ggplot(df2) +
geom_hline(aes(yintercept = value), color = "gray", data = truthdf) +
geom_line(aes(x = samples, y = value, color = method), linewidth = 0.5) +
geom_point(aes(x = samples, y = value, color = method)) +
facet_grid(rows = vars(name), cols = vars(network), labeller=label_parsed, scales = "free_y") +
ylab("") + xlab("Sample Size") + labs(color = "") +
scale_color_manual(values = c("#002e5c", "#ffa600", "#00aaf5")) +
theme(strip.background = element_rect("#EEEEEE", "#d1d1d1"),
strip.text = element_text(colour = 'black'),
legend.position = "bottom",legend.title=element_blank(),
legend.margin=margin(-10,0,0,0),
panel.spacing = unit(15, "pt")) +
scale_x_continuous(breaks = c(400, 900, 1600, 2500))
ggsave("sim-result.png", p1, path = here("results"), width = 6, height = 6)
df2 = df %>%
pivot_longer(all_of(c("pct_bias", "scaled_bias", "scaled_mse", "coverage"))) %>%
select(samples, method, name, value, network) %>%
filter(method %in% c("tmle", "tmle_iid", "ols"))
\
df$scaled_bias = abs(df$scaled_bias)
df
network_names = c("er-super5", "sf-super5", "ws-super5")
network_names_full = c(`er-super-fast` = "Erdős-Rényi", `sf-super-fast` = "Scale-Free", `ws-super-fast` = "Watts-Strogatz")
here("data", paste0("summary-synthetic-3-stepwise.jl-", network_names[1], ".csv"))
read_simulation_result <- function(x){
df = read_csv(here("data", paste0("summary-synthetic-3-stepwise.jl-", x, ".csv")))
df$network = x
return(df)
}
df = bind_rows(lapply(network_names, read_simulation_result))
df
labels = c("`% Bias`", "`Scaled Bias`", "`Scaled MSE`", "`Coverage`")
truthdf = read_csv(here("data", paste0("synthetic-truth.csv"))) %>%
filter(structure == "synthetic-3-stepwise.jl") %>%
pivot_longer(all_of(c("bias", "scaled_bias", "scaled_mse", "coverage")))
truthdf$name = factor(truthdf$name,
c("bias", "scaled_bias", "scaled_mse", "coverage"),
labels = labels)
truthdf$network = factor(truthdf$network,
network_names,
labels = network_names_full)
df$scaled_bias = abs(df$scaled_bias)
df2 = df %>%
pivot_longer(all_of(c("pct_bias", "scaled_bias", "scaled_mse", "coverage"))) %>%
select(samples, method, name, value, network) %>%
filter(method %in% c("tmle", "tmle_iid", "ols"))
df2$name = factor(df2$name,
c("pct_bias", "scaled_bias", "scaled_mse", "coverage"),
labels = labels)
df2$network = factor(df2$network,
network_names,
labels = network_names_full)
df2$method = factor(df2$method,
c("tmle", "tmle_iid", "ols"),
labels = c(tmle = "Network TMLE", tmle_iid = "TMLE (No Network)", ols = "Linear Regression (No Network)"))
theme_set(theme_light(base_size = 10))
p1 = ggplot(df2) +
geom_hline(aes(yintercept = value), color = "gray", data = truthdf) +
geom_line(aes(x = samples, y = value, color = method), linewidth = 0.5) +
geom_point(aes(x = samples, y = value, color = method)) +
facet_grid(rows = vars(name), cols = vars(network), labeller=label_parsed, scales = "free_y") +
ylab("") + xlab("Sample Size") + labs(color = "") +
scale_color_manual(values = c("#002e5c", "#ffa600", "#00aaf5")) +
theme(strip.background = element_rect("#EEEEEE", "#d1d1d1"),
strip.text = element_text(colour = 'black'),
legend.position = "bottom",legend.title=element_blank(),
legend.margin=margin(-10,0,0,0),
panel.spacing = unit(15, "pt")) +
scale_x_continuous(breaks = c(400, 900, 1600, 2500))
ggsave("sim-result.png", p1, path = here("results"), width = 6, height = 6)
labels = c("`% Bias`", "`Scaled Abs. Bias`", "`Scaled MSE`", "`Coverage`")
truthdf = read_csv(here("data", paste0("synthetic-truth.csv"))) %>%
filter(structure == "synthetic-3-stepwise.jl") %>%
pivot_longer(all_of(c("bias", "scaled_bias", "scaled_mse", "coverage")))
truthdf$name = factor(truthdf$name,
c("bias", "scaled_bias", "scaled_mse", "coverage"),
labels = labels)
truthdf$network = factor(truthdf$network,
network_names,
labels = network_names_full)
df$scaled_bias = abs(df$scaled_bias)
df2 = df %>%
pivot_longer(all_of(c("pct_bias", "scaled_bias", "scaled_mse", "coverage"))) %>%
select(samples, method, name, value, network) %>%
filter(method %in% c("tmle", "tmle_iid", "ols"))
df2$name = factor(df2$name,
c("pct_bias", "scaled_bias", "scaled_mse", "coverage"),
labels = labels)
df2$network = factor(df2$network,
network_names,
labels = network_names_full)
df2$method = factor(df2$method,
c("tmle", "tmle_iid", "ols"),
labels = c(tmle = "Network TMLE", tmle_iid = "TMLE (No Network)", ols = "Linear Regression (No Network)"))
library(here)
library(tidyverse)
library(stargazer)
network_names = c("er-super5", "sf-super5", "ws-super5")
network_names_full = c(`er-super-fast` = "Erdős-Rényi", `sf-super-fast` = "Scale-Free", `ws-super-fast` = "Watts-Strogatz")
here("data", paste0("summary-synthetic-3-stepwise.jl-", network_names[1], ".csv"))
read_simulation_result <- function(x){
df = read_csv(here("data", paste0("summary-synthetic-3-stepwise.jl-", x, ".csv")))
df$network = x
return(df)
}
df = bind_rows(lapply(network_names, read_simulation_result))
df
labels = c("`% Bias`", "`Scaled Abs. Bias`", "`Scaled MSE`", "`Coverage`")
truthdf = read_csv(here("data", paste0("synthetic-truth.csv"))) %>%
filter(structure == "synthetic-3-stepwise.jl") %>%
pivot_longer(all_of(c("bias", "scaled_bias", "scaled_mse", "coverage")))
truthdf$name = factor(truthdf$name,
c("bias", "scaled_bias", "scaled_mse", "coverage"),
labels = labels)
truthdf$network = factor(truthdf$network,
network_names,
labels = network_names_full)
df$scaled_bias = abs(df$scaled_bias)
df2 = df %>%
pivot_longer(all_of(c("pct_bias", "scaled_bias", "scaled_mse", "coverage"))) %>%
select(samples, method, name, value, network) %>%
filter(method %in% c("tmle", "tmle_iid", "ols"))
df2$name = factor(df2$name,
c("pct_bias", "scaled_bias", "scaled_mse", "coverage"),
labels = labels)
df2$network = factor(df2$network,
network_names,
labels = network_names_full)
df2$method = factor(df2$method,
c("tmle", "tmle_iid", "ols"),
labels = c(tmle = "Network TMLE", tmle_iid = "TMLE (No Network)", ols = "Linear Regression (No Network)"))
theme_set(theme_light(base_size = 10))
p1 = ggplot(df2) +
geom_hline(aes(yintercept = value), color = "gray", data = truthdf) +
geom_line(aes(x = samples, y = value, color = method), linewidth = 0.5) +
geom_point(aes(x = samples, y = value, color = method)) +
facet_grid(rows = vars(name), cols = vars(network), labeller=label_parsed, scales = "free_y") +
ylab("") + xlab("Sample Size") + labs(color = "") +
scale_color_manual(values = c("#002e5c", "#ffa600", "#00aaf5")) +
theme(strip.background = element_rect("#EEEEEE", "#d1d1d1"),
strip.text = element_text(colour = 'black'),
legend.position = "bottom",legend.title=element_blank(),
legend.margin=margin(-10,0,0,0),
panel.spacing = unit(15, "pt")) +
scale_x_continuous(breaks = c(400, 900, 1600, 2500))
ggsave("sim-result.png", p1, path = here("results"), width = 6, height = 6)
p1
library(here)
library(tidyverse)
library(mgcv)
library(stargazer)
library(sf)
library(colorspace)
library("scales")
df_raw = read_csv(here("data", "NO2_ZEV_ZCTAs.csv"))
df = df_raw %>% select(-ZCTA, -n2_2019)
grid_df_a = read_csv(here("results", "mtp_grid_a.csv"))
grid_df_a$shifttype = "Additive Shift"
grid_df_m = read_csv(here("results", "mtp_grid_m.csv"))
grid_df_m$shifttype = "Multiplicative Shift"
# First, compute the ratio needed to Bonferroni-correct the existing CIs
original_tstat = 1.96
## additive
num_tests_a = length(unique(grid_df_a$shift))
new_tstat_a = qnorm(1 - (0.05 / num_tests_a))
ratio_a = new_tstat_a / original_tstat
grid_df_a$lower = grid_df_a$est - ((grid_df_a$est - grid_df_a$lower) * ratio_a)
grid_df_a$upper = grid_df_a$est + ((grid_df_a$upper - grid_df_a$est) * ratio_a)
## multiplicative
num_tests_m = length(unique(grid_df_m$shift))
new_tstat_m = qnorm(1 - (0.05 / num_tests_m))
ratio_m = new_tstat_m / original_tstat
grid_df_m$lower = grid_df_m$est - ((grid_df_m$est - grid_df_m$lower) * ratio_a)
grid_df_m$upper = grid_df_m$est + ((grid_df_m$upper - grid_df_m$est) * ratio_a)
grid_df = rbind(grid_df_a, grid_df_m)
grid_df = grid_df[grid_df$shift > 0,]
grid_df[,3:5] = abs(grid_df[,3:5])
group.colors <- c("MTP (No Interference)" = "#7BA573",
"Induced MTP (Sum)" = "#000332",
"Induced MTP (Trimmed)" = "#6B82B9")
#grid_df$name  = as.factor(grid_df$name)
p = ggplot(grid_df, aes(x = shift, y = est)) +
geom_ribbon(aes(ymin = lower, ymax = upper, color = name, fill = name),
width = 0, linewidth = 0.6, alpha = 0.3) +
geom_line(aes(color = name), size = 0.6) +
theme_minimal() +
labs(x = "Increase in Proportion of ZEVs Across CA (Percentage Point)",
y = "Change in NO2 (ppb)",
color="Estimator") +
theme(legend.position = "bottom", axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)), plot.margin = margin(, 2, , , "cm")) +
facet_wrap(vars(shifttype), ncol = 2, scales = "free") +
scale_color_manual(labels = labels, values=group.colors) +
scale_fill_manual(labels = labels, values=group.colors)
p
ggsave(here("results", "data-MTP-grid.png"), width = 6, height = 4)
grid_df_a = read_csv(here("results", "mtp_grid_a.csv"))
grid_df_a$shifttype = "Additive Shift"
grid_df_m = read_csv(here("results", "mtp_grid_m.csv"))
grid_df_m$shifttype = "Multiplicative Shift"
# First, compute the ratio needed to Bonferroni-correct the existing CIs
original_tstat = 1.96
## additive
num_tests_a = length(unique(grid_df_a$shift))
new_tstat_a = qnorm(1 - (0.05 / num_tests_a))
ratio_a = new_tstat_a / original_tstat
grid_df_a$lower = grid_df_a$est - ((grid_df_a$est - grid_df_a$lower) * ratio_a)
grid_df_a$upper = grid_df_a$est + ((grid_df_a$upper - grid_df_a$est) * ratio_a)
## multiplicative
num_tests_m = length(unique(grid_df_m$shift))
new_tstat_m = qnorm(1 - (0.05 / num_tests_m))
ratio_m = new_tstat_m / original_tstat
grid_df_m$lower = grid_df_m$est - ((grid_df_m$est - grid_df_m$lower) * ratio_a)
grid_df_m$upper = grid_df_m$est + ((grid_df_m$upper - grid_df_m$est) * ratio_a)
grid_df = rbind(grid_df_a, grid_df_m)
grid_df = grid_df[grid_df$shift > 0,]
grid_df[,3:5] = abs(grid_df[,3:5])
group.colors <- c("MTP (No Interference)" = "#7BA573",
"Induced MTP (Sum)" = "#000332",
"Induced MTP (Trimmed)" = "#6B82B9")
#grid_df$name  = as.factor(grid_df$name)
p = ggplot(grid_df, aes(x = shift, y = est)) +
geom_ribbon(aes(ymin = lower, ymax = upper, color = name, fill = name),
width = 0, linewidth = 0.6, alpha = 0.3) +
geom_line(aes(color = name), size = 0.6) +
theme_minimal() +
labs(x = "Increase in Proportion of ZEVs Across CA (Percentage Point)",
y = "Change in NO2 (ppb)",
color="Estimator") +
theme(legend.position = "bottom", axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)), plot.margin = margin(, 2, , , "cm")) +
facet_wrap(vars(shifttype), ncol = 2, scales = "free") +
scale_color_manual(labels = labels, values=group.colors) +
scale_fill_manual(labels = labels, values=group.colors)
p
ggsave(here("results", "data-MTP-grid.png"), width = 6, height = 4)
#grid_df$name  = as.factor(grid_df$name)
p = ggplot(grid_df, aes(x = shift, y = est)) +
geom_ribbon(aes(ymin = lower, ymax = upper, color = name, fill = name),
width = 0, linewidth = 0.6, alpha = 0.3) +
geom_line(aes(color = name), size = 0.6) +
theme_minimal() +
labs(x = "Increase in Proportion of ZEVs Across CA (Percentage Point)",
y = "Change in NO2 (ppb)",
color="Estimator") +
theme(legend.position = "bottom", axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)), plot.margin = margin(, 2, , , "cm")) +
facet_wrap(vars(shifttype), ncol = 2, scales = "free") +
scale_color_manual(values=group.colors) +
scale_fill_manual(values=group.colors)
p
ggsave(here("results", "data-MTP-grid.png"), width = 6, height = 4)
#grid_df$name  = as.factor(grid_df$name)
p = ggplot(grid_df, aes(x = shift, y = est)) +
geom_ribbon(aes(ymin = lower, ymax = upper, color = name),
width = 0, linewidth = 0.6, alpha = 0.3) +
geom_line(aes(color = name), size = 0.6) +
theme_minimal() +
labs(x = "Increase in Proportion of ZEVs Across CA (Percentage Point)",
y = "Change in NO2 (ppb)",
color="Estimator") +
theme(legend.position = "bottom", axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)), plot.margin = margin(, 2, , , "cm")) +
facet_wrap(vars(shifttype), ncol = 2, scales = "free") +
scale_color_manual(values=group.colors) +
scale_fill_manual(values=group.colors)
p
ggsave(here("results", "data-MTP-grid.png"), width = 6, height = 4)
#grid_df$name  = as.factor(grid_df$name)
p = ggplot(grid_df, aes(x = shift, y = est)) +
geom_ribbon(aes(ymin = lower, ymax = upper, color = name),
width = 0, linewidth = 0.6, alpha = 0.3) +
geom_line(aes(color = name), size = 0.6) +
theme_minimal() +
labs(x = "Increase in Proportion of ZEVs Across CA (Percentage Point)",
y = "Change in NO2 (ppb)",
color="Estimator") +
theme(legend.position = "bottom", axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)), plot.margin = margin(, 2, , , "cm")) +
facet_wrap(vars(shifttype), ncol = 2, scales = "free") +
scale_color_manual(values=group.colors)# +
#scale_fill_manual(values=group.colors)
p
ggsave(here("results", "data-MTP-grid.png"), width = 6, height = 4)
#grid_df$name  = as.factor(grid_df$name)
p = ggplot(grid_df, aes(x = shift, y = est)) +
geom_ribbon(aes(ymin = lower, ymax = upper, fill = name),
width = 0, linewidth = 0.6, alpha = 0.3) +
geom_line(aes(color = name), size = 0.6) +
theme_minimal() +
labs(x = "Increase in Proportion of ZEVs Across CA (Percentage Point)",
y = "Change in NO2 (ppb)",
color="Estimator") +
theme(legend.position = "bottom", axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)), plot.margin = margin(, 2, , , "cm")) +
facet_wrap(vars(shifttype), ncol = 2, scales = "free") +
scale_color_manual(values=group.colors)# +
#scale_fill_manual(values=group.colors)
p
ggsave(here("results", "data-MTP-grid.png"), width = 6, height = 4)
#grid_df$name  = as.factor(grid_df$name)
p = ggplot(grid_df, aes(x = shift, y = est)) +
geom_ribbon(aes(ymin = lower, ymax = upper, fill = name),
width = 0, linewidth = 0.6, alpha = 0.3) +
geom_line(aes(color = name), size = 0.6) +
theme_minimal() +
labs(x = "Increase in Proportion of ZEVs Across CA (Percentage Point)",
y = "Change in NO2 (ppb)",
color="Estimator") +
theme(legend.position = "bottom", axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)), plot.margin = margin(, 2, , , "cm")) +
facet_wrap(vars(shifttype), ncol = 2, scales = "free") +
scale_color_manual(values=group.colors) +
scale_fill_manual(values=group.colors)
p
ggsave(here("results", "data-MTP-grid.png"), width = 6, height = 4)
grid_df$name  = as.factor(grid_df$name)
p = ggplot(grid_df, aes(x = shift, y = est)) +
geom_ribbon(aes(ymin = lower, ymax = upper, fill = name),
width = 0, linewidth = 0.6, alpha = 0.3) +
geom_line(aes(color = name), size = 0.6) +
theme_minimal() +
labs(x = "Increase in Proportion of ZEVs Across CA (Percentage Point)",
y = "Change in NO2 (ppb)",
color="Estimator") +
theme(legend.position = "bottom", axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)), plot.margin = margin(, 2, , , "cm")) +
facet_wrap(vars(shifttype), ncol = 2, scales = "free") +
scale_color_manual(values=group.colors) +
scale_fill_manual(values=group.colors)
p
ggsave(here("results", "data-MTP-grid.png"), width = 6, height = 4)
labels = unique(grid_df$name)
labels
grid_df$name  = as.factor(grid_df$name)
labels = unique(grid_df$name)
p = ggplot(grid_df, aes(x = shift, y = est)) +
geom_ribbon(aes(ymin = lower, ymax = upper, fill = name),
width = 0, linewidth = 0.6, alpha = 0.3) +
geom_line(aes(color = name), size = 0.6) +
theme_minimal() +
labs(x = "Increase in Proportion of ZEVs Across CA (Percentage Point)",
y = "Change in NO2 (ppb)",
color="Estimator") +
theme(legend.position = "bottom", axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)), plot.margin = margin(, 2, , , "cm")) +
facet_wrap(vars(shifttype), ncol = 2, scales = "free") +
scale_color_manual(labels = labels, values=group.colors) +
scale_fill_manual(labels = labels, values=group.colors)
p
ggsave(here("results", "data-MTP-grid.png"), width = 6, height = 4)
grid_df$name
grid_df$name  = as.factor(grid_df$name, levels = )
grid_df$name
grid_df_a = read_csv(here("results", "mtp_grid_a.csv"))
grid_df_a$shifttype = "Additive Shift"
grid_df_m = read_csv(here("results", "mtp_grid_m.csv"))
grid_df_m$shifttype = "Multiplicative Shift"
# First, compute the ratio needed to Bonferroni-correct the existing CIs
original_tstat = 1.96
## additive
num_tests_a = length(unique(grid_df_a$shift))
new_tstat_a = qnorm(1 - (0.05 / num_tests_a))
ratio_a = new_tstat_a / original_tstat
grid_df_a$lower = grid_df_a$est - ((grid_df_a$est - grid_df_a$lower) * ratio_a)
grid_df_a$upper = grid_df_a$est + ((grid_df_a$upper - grid_df_a$est) * ratio_a)
## multiplicative
num_tests_m = length(unique(grid_df_m$shift))
new_tstat_m = qnorm(1 - (0.05 / num_tests_m))
ratio_m = new_tstat_m / original_tstat
grid_df_m$lower = grid_df_m$est - ((grid_df_m$est - grid_df_m$lower) * ratio_a)
grid_df_m$upper = grid_df_m$est + ((grid_df_m$upper - grid_df_m$est) * ratio_a)
grid_df = rbind(grid_df_a, grid_df_m)
grid_df = grid_df[grid_df$shift > 0,]
grid_df[,3:5] = abs(grid_df[,3:5])
group.colors <- c("MTP (No Interference)" = "#7BA573",
"Induced MTP (Sum)" = "#000332",
"Induced MTP (Trimmed)" = "#6B82B9")
labels = unique(grid_df$name)
labels
labels = unique(grid_df$name)[c(2, 1, 3)]
labels
labels = unique(grid_df$name)[c(2, 1, 3)]
grid_df$name  = as.factor(grid_df$name, levels = labels)
labels = unique(grid_df$name)[c(2, 1, 3)]
grid_df$name  = factor(grid_df$name, levels = labels)
p = ggplot(grid_df, aes(x = shift, y = est)) +
geom_ribbon(aes(ymin = lower, ymax = upper, fill = name),
width = 0, linewidth = 0.6, alpha = 0.3) +
geom_line(aes(color = name), size = 0.6) +
theme_minimal() +
labs(x = "Increase in Proportion of ZEVs Across CA (Percentage Point)",
y = "Change in NO2 (ppb)",
color="Estimator") +
theme(legend.position = "bottom", axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)), plot.margin = margin(, 2, , , "cm")) +
facet_wrap(vars(shifttype), ncol = 2, scales = "free") +
scale_color_manual(labels = labels, values=group.colors) +
scale_fill_manual(labels = labels, values=group.colors)
p
ggsave(here("results", "data-MTP-grid.png"), width = 6, height = 4)
labels = unique(grid_df$name)[c(2, 1, 3)]
grid_df$name  = factor(grid_df$name, levels = labels)
p = ggplot(grid_df, aes(x = shift, y = est)) +
geom_ribbon(aes(ymin = lower, ymax = upper, fill = name),
width = 0, linewidth = 0.6, alpha = 0.3) +
geom_line(aes(color = name), size = 0.6) +
theme_minimal() +
labs(x = "Increase in Proportion of ZEVs Across CA (Percentage Point)",
y = "Change in NO2 (ppb)",
color="Estimator") +
theme(legend.position = "bottom", axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)), plot.margin = margin(, 2, , , "cm")) +
facet_wrap(vars(shifttype), ncol = 2, scales = "free") +
scale_color_manual(name = "", labels = labels, values=group.colors) +
scale_fill_manual(name = "", labels = labels, values=group.colors)
p
ggsave(here("results", "data-MTP-grid.png"), width = 6, height = 4)
p
ggsave(here("results", "data-MTP-grid.png"), width = 6, height = 4)
labels = unique(grid_df$name)[c(2, 1, 3)]
grid_df$name  = factor(grid_df$name, levels = labels)
p = ggplot(grid_df, aes(x = shift, y = est)) +
geom_ribbon(aes(ymin = lower, ymax = upper, fill = name),
width = 0, linewidth = 0.6, alpha = 0.3) +
geom_line(aes(color = name), size = 0.6) +
theme_minimal() +
labs(x = "Increase in Proportion of ZEVs Across CA (Percentage Point)",
y = "Change in NO2 (ppb)",
color="Estimator") +
theme(legend.position = "bottom", axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)), plot.margin = margin(, 2, , , "cm")) +
facet_wrap(vars(shifttype), ncol = 2, scales = "free") +
scale_color_manual(name = "", labels = labels, values=group.colors) +
scale_fill_manual(name = "", labels = labels, values=group.colors)
p
ggsave(here("results", "data-MTP-grid.png"), width = 6, height = 4)
here("results", "data-MTP-grid.png")
ggsave(here("results", "data-MTP-grid2.png"), width = 6, height = 4)
new_tstat_a
new_tstat_a = qnorm(1 - (0.025 / num_tests_a))
new_tstat_a
grid_df_a = read_csv(here("results", "mtp_grid_a.csv"))
grid_df_a$shifttype = "Additive Shift"
grid_df_m = read_csv(here("results", "mtp_grid_m.csv"))
grid_df_m$shifttype = "Multiplicative Shift"
# First, compute the ratio needed to Bonferroni-correct the existing CIs
original_tstat = 1.96
## additive
num_tests_a = length(unique(grid_df_a$shift))
new_tstat_a = qnorm(1 - (0.025 / num_tests_a))
new_tstat_a
ratio_a = new_tstat_a / original_tstat
grid_df_a$lower = grid_df_a$est - ((grid_df_a$est - grid_df_a$lower) * ratio_a)
grid_df_a$upper = grid_df_a$est + ((grid_df_a$upper - grid_df_a$est) * ratio_a)
## multiplicative
num_tests_m = length(unique(grid_df_m$shift))
new_tstat_m = qnorm(1 - (0.025 / num_tests_m))
ratio_m = new_tstat_m / original_tstat
grid_df_m$lower = grid_df_m$est - ((grid_df_m$est - grid_df_m$lower) * ratio_a)
grid_df_m$upper = grid_df_m$est + ((grid_df_m$upper - grid_df_m$est) * ratio_a)
grid_df = rbind(grid_df_a, grid_df_m)
grid_df = grid_df[grid_df$shift > 0,]
grid_df[,3:5] = abs(grid_df[,3:5])
group.colors <- c("MTP (No Interference)" = "#7BA573",
"Induced MTP (Sum)" = "#000332",
"Induced MTP (Trimmed)" = "#6B82B9")
labels = unique(grid_df$name)[c(2, 1, 3)]
grid_df$name  = factor(grid_df$name, levels = labels)
p = ggplot(grid_df, aes(x = shift, y = est)) +
geom_ribbon(aes(ymin = lower, ymax = upper, fill = name),
width = 0, linewidth = 0.6, alpha = 0.3) +
geom_line(aes(color = name), size = 0.6) +
theme_minimal() +
labs(x = "Increase in Proportion of ZEVs Across CA (Percentage Point)",
y = "Change in NO2 (ppb)",
color="Estimator") +
theme(legend.position = "bottom", axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)), plot.margin = margin(, 2, , , "cm")) +
facet_wrap(vars(shifttype), ncol = 2, scales = "free") +
scale_color_manual(name = "", labels = labels, values=group.colors) +
scale_fill_manual(name = "", labels = labels, values=group.colors)
p
here("results", "data-MTP-grid.png")
ggsave(here("results", "data-MTP-grid2.png"), width = 6, height = 4)
labels = unique(grid_df$name)[c(2, 1, 3)]
grid_df$name  = factor(grid_df$name, levels = labels)
p = ggplot(grid_df, aes(x = shift, y = est)) +
geom_ribbon(aes(ymin = lower, ymax = upper, fill = name),
width = 0, linewidth = 0.6, alpha = 0.3) +
geom_line(aes(color = name), size = 0.6) +
theme_minimal() +
labs(x = "Increase in Proportion of ZEVs Across CA (Percentage Point)",
y = "Change in NO2 (ppb)",
color="Estimator") +
theme(legend.position = "bottom", axis.text.x = element_text(margin = margin(t = 4, r = 10, b = 10, l = 10)), plot.margin = margin(, 2, , , "cm")) +
facet_wrap(vars(shifttype), ncol = 2, scales = "free") +
scale_color_manual(name = "", labels = labels, values=group.colors) +
scale_fill_manual(name = "", labels = labels, values=group.colors)
p
here("results", "data-MTP-grid.png")
ggsave(here("results", "data-MTP-grid2.png"), width = 6, height = 4)
